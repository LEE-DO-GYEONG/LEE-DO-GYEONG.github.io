<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://lee-do-gyeong.github.io/</id><title>이도경</title><subtitle>이도경, 검색, 정보검색, information retrieval, irgroup</subtitle> <updated>2021-12-29T14:34:58+09:00</updated> <author> <name>LEE-DO-GYEONG</name> <uri>https://lee-do-gyeong.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://lee-do-gyeong.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko" href="https://lee-do-gyeong.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2021 LEE-DO-GYEONG </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>6.advanced_screenshot</title><link href="https://lee-do-gyeong.github.io/posts/6_advanced_screenshot/" rel="alternate" type="text/html" title="6.advanced_screenshot" /><published>2021-12-29T03:50:00+09:00</published> <updated>2021-12-29T03:50:00+09:00</updated> <id>https://lee-do-gyeong.github.io/posts/6_advanced_screenshot/</id> <content src="https://lee-do-gyeong.github.io/posts/6_advanced_screenshot/" /> <author> <name>LEE-DO-GYEONG</name> </author> <category term="Visual_Studio" /> <category term="GUI_project" /> <summary> 6. advanced_screenshot import time import keyboard from PIL import ImageGrab def screenshot(): curr_time = time.strftime("_%Y%m%d_%H%M%S") img = ImageGrab.grab() img.save("image{}.png".format(curr_time)) keyboard.add_hotkey("F9", screenshot) # 사용자가 F9 키를 누르면 스크린 샷 저장 keyboard.wait("esc") # 사용자가 esc 를 누를 때까지 프로그램 수행 </summary> </entry> <entry><title>5.apply_options</title><link href="https://lee-do-gyeong.github.io/posts/5_apply_options/" rel="alternate" type="text/html" title="5.apply_options" /><published>2021-12-29T03:49:00+09:00</published> <updated>2021-12-29T03:49:00+09:00</updated> <id>https://lee-do-gyeong.github.io/posts/5_apply_options/</id> <content src="https://lee-do-gyeong.github.io/posts/5_apply_options/" /> <author> <name>LEE-DO-GYEONG</name> </author> <category term="Visual_Studio" /> <category term="GUI_project" /> <summary> 5. apply_options from tkinter import * import tkinter.ttk as ttk from tkinter import filedialog import tkinter.messagebox as msgbox from PIL import Image import os root = Tk() root.title("Nado GUI") # 제목 # root.geometry("640x480") # 가로 x 세로 # 파일 프레임 (파일 추가, 선택 삭제) file_frame = Frame(root) file_frame.pack(fill="x", padx=5, pady=5) # 간격 띄우기 # 파일 추가 기능 def add_file(): files = filedial... </summary> </entry> <entry><title>4.merge_image</title><link href="https://lee-do-gyeong.github.io/posts/4_merge_image/" rel="alternate" type="text/html" title="4.merge_image" /><published>2021-12-29T03:48:00+09:00</published> <updated>2021-12-29T03:48:00+09:00</updated> <id>https://lee-do-gyeong.github.io/posts/4_merge_image/</id> <content src="https://lee-do-gyeong.github.io/posts/4_merge_image/" /> <author> <name>LEE-DO-GYEONG</name> </author> <category term="Visual_Studio" /> <category term="GUI_project" /> <summary> 4. merge_image from tkinter import * import tkinter.ttk as ttk from tkinter import filedialog import tkinter.messagebox as msgbox from PIL import Image import os root = Tk() root.title("Nado GUI") # 제목 # root.geometry("640x480") # 가로 x 세로 # 파일 프레임 (파일 추가, 선택 삭제) file_frame = Frame(root) file_frame.pack(fill="x", padx=5, pady=5) # 간격 띄우기 # 파일 추가 기능 def add_file(): files = filedialog.... </summary> </entry> <entry><title>3.auto_screenshot</title><link href="https://lee-do-gyeong.github.io/posts/3_auto_screenshot/" rel="alternate" type="text/html" title="3.auto_screenshot" /><published>2021-12-29T03:47:00+09:00</published> <updated>2021-12-29T03:47:00+09:00</updated> <id>https://lee-do-gyeong.github.io/posts/3_auto_screenshot/</id> <content src="https://lee-do-gyeong.github.io/posts/3_auto_screenshot/" /> <author> <name>LEE-DO-GYEONG</name> </author> <category term="Visual_Studio" /> <category term="GUI_project" /> <summary> 3. auto_screenshot from PIL import ImageGrab import time time.sleep(5) # 5초 대기: 사용자가 준비하는 시간 for i in range(1, 11): # 2초 간격으로 10개 이미지 저장 img = ImageGrab.grab() # 현재 스크린 이미지를 가져옴 img.save("image{}.png".format(i)) # 파일로 저장 time.sleep(2) # 2초 단위 </summary> </entry> <entry><title>2.basic_function</title><link href="https://lee-do-gyeong.github.io/posts/2_basic_function/" rel="alternate" type="text/html" title="2.basic_function" /><published>2021-12-29T03:46:00+09:00</published> <updated>2021-12-29T03:46:00+09:00</updated> <id>https://lee-do-gyeong.github.io/posts/2_basic_function/</id> <content src="https://lee-do-gyeong.github.io/posts/2_basic_function/" /> <author> <name>LEE-DO-GYEONG</name> </author> <category term="Visual_Studio" /> <category term="GUI_project" /> <summary> 2. basic_function from tkinter import * import tkinter.ttk as ttk from tkinter import filedialog import tkinter.messagebox as msgbox root = Tk() root.title("Nado GUI") # 제목 # root.geometry("640x480") # 가로 x 세로 # 파일 프레임 (파일 추가, 선택 삭제) file_frame = Frame(root) file_frame.pack(fill="x", padx=5, pady=5) # 간격 띄우기 # 파일 추가 기능 def add_file(): files = filedialog.askopenfilenames(title="이미지 파... </summary> </entry> </feed>
